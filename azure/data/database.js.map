{"version":3,"sources":["../../data/database.js"],"names":["addTodo","changeTodoStatus","getTodo","getTodos","getUser","getViewer","markAllTodos","removeTodo","removeCompletedTodos","renameTodo","Todo","User","VIEWER_ID","viewer","id","usersById","todosById","todoIdsByUser","nextTodoId","text","complete","todo","push","status","todos","map","filter","changedTodos","forEach","todoIndex","indexOf","splice","todosToRemove"],"mappings":"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","file":"database.js","sourcesContent":["/**\n * This file provided by Facebook is for non-commercial testing and evaluation\n * purposes only.  Facebook reserves all rights not expressly granted.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * FACEBOOK BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nexport class Todo { }\nexport class User { }\n\n// Mock authenticated ID\nconst VIEWER_ID = 'me';\n\n// Mock user data\nconst viewer = new User();\nviewer.id = VIEWER_ID;\nconst usersById = {\n  [VIEWER_ID]: viewer,\n};\n\n// Mock todo data\nconst todosById = {};\nconst todoIdsByUser = {\n  [VIEWER_ID]: [],\n};\nlet nextTodoId = 0;\naddTodo('Taste JavaScript', true);\naddTodo('Buy a unicorn', false);\n\nexport function addTodo(text, complete) {\n  const todo = new Todo();\n  todo.complete = !!complete;\n  todo.id = `${nextTodoId++}`;\n  todo.text = text;\n  todosById[todo.id] = todo;\n  todoIdsByUser[VIEWER_ID].push(todo.id);\n  return todo.id;\n}\n\nexport function changeTodoStatus(id, complete) {\n  const todo = getTodo(id);\n  todo.complete = complete;\n}\n\nexport function getTodo(id) {\n  return todosById[id];\n}\n\nexport function getTodos(status = 'any') {\n  const todos = todoIdsByUser[VIEWER_ID].map(id => todosById[id]);\n  if (status === 'any') {\n    return todos;\n  }\n  return todos.filter(todo => todo.complete === (status === 'completed'));\n}\n\nexport function getUser(id) {\n  return usersById[id];\n}\n\nexport function getViewer() {\n  return getUser(VIEWER_ID);\n}\n\nexport function markAllTodos(complete) {\n  const changedTodos = [];\n  getTodos().forEach(todo => {\n    if (todo.complete !== complete) {\n      todo.complete = complete;\n      changedTodos.push(todo);\n    }\n  });\n  return changedTodos.map(todo => todo.id);\n}\n\nexport function removeTodo(id) {\n  const todoIndex = todoIdsByUser[VIEWER_ID].indexOf(id);\n  if (todoIndex !== -1) {\n    todoIdsByUser[VIEWER_ID].splice(todoIndex, 1);\n  }\n  delete todosById[id];\n}\n\nexport function removeCompletedTodos() {\n  const todosToRemove = getTodos().filter(todo => todo.complete);\n  todosToRemove.forEach(todo => removeTodo(todo.id));\n  return todosToRemove.map(todo => todo.id);\n}\n\nexport function renameTodo(id, text) {\n  const todo = getTodo(id);\n  todo.text = text;\n}\n"]}