{"version":3,"sources":["../server.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AACA;;AAMA;;;;AACA;AACA;AACA,IAAM,eAAe,QAAQ,GAAR,CAAY,IAAZ,IAAoB,IAAzC;;AAEA;;;AATA;;AAEA;AACA;AAOA,IAAM,gBAAgB,wBAAtB;AACA,cAAc,GAAd,CAAkB,kBAAQ,MAAR,CAAe,QAAf,CAAlB;AACA,cAAc,GAAd,CAAkB,GAAlB,EAAuB,8BAAY,EAAE,sBAAF,EAAU,UAAU,IAApB,EAA0B,QAAQ,IAAlC,EAAZ,CAAvB;AACA,cAAc,MAAd,CAAqB,YAArB,EAAmC;AAAA,SAAM,QAAQ,GAAR,wDACc,YADd,CAAN;AAAA,CAAnC","file":"index.js","sourcesContent":["import express from 'express';\nimport graphQLHTTP from 'express-graphql';\nimport { schema } from './data/schema';\n\n//*****************************************************************************************/\n\n//if you don't have below line, nodemon won't re-load generateSchemaJson, \n//and as such your old schema.json is used\nimport './scripts/updateSchema';\n//however you don't have to explicitly call the generateSchemaJSON method, as it's automatically \n//callel everytime the file is loaded (node loads that module)\nconst GRAPHQL_PORT = process.env.port || 8081;\n\n// Expose a GraphQL endpoint\nconst graphQLServer = express();\ngraphQLServer.use(express.static('public'));\ngraphQLServer.use('/', graphQLHTTP({ schema, graphiql: true, pretty: true }));\ngraphQLServer.listen(GRAPHQL_PORT, () => console.log(\n  `GraphQL Server is now running on http://localhost:${GRAPHQL_PORT}`\n));\n"]}